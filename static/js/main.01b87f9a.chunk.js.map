{"version":3,"sources":["DataBaseContext.js","optionMenu.js","contexts/AuthContext.js","WelcomePage.js","LogInPage.js","Try.js","App.js","serviceWorker.js","index.js"],"names":["DataBaseContext","createContext","DataBaseContextC","state","uName","sensors","actuators","authT","loginPageF","uname","setState","sendToken","token","console","log","this","context","sensores","fetch","sensorsResponse","json","sensorsData","digital_sensors","actuatorResponse","actuatorsData","connections","Provider","value","props","children","Component","optionMenu","M","window","document","addEventListener","elems","querySelectorAll","Collapsible","init","FloatingActionButton","dataSensorsList","length","map","sensor","class","style","margin","key","id","device_name","mac_address","className","dataActuatorsList","actuator","welcomeMenuPage","contextType","AuthContext","WelcomePage","userN","testModal","e","getElementById","dataName","loginPage","AutoInit","Modal","FormSelect","nameFound","location","href","match","method","headers","authToken","then","res","data","userSensors","catch","err","dataDevicesList","push","device_type","hardC","Consumer","authContext","userName","userCred","disabled","selected","type","placeholder","data-target","onClick","handleClick","serverLaptop","LogInPage","_isMounted","userPass","uT","validUser","han","handleInputChange","target","handlePassChange","handleLogin","a","body","JSON","stringify","rawResponse","content","access_token","handleSubmit","loginValidation","str","replace","getToken","resp","status","for","onChange","to","pathname","user","pass","Try","digital_actuators","digital_connections","newConnectionName","device1","device2","user_id","mA","url","changeNameField","sensorName","actuatorName","selectedDeviceMac","newSensorMAC","newActuatorMAC","editSensorName","deviceName","i","sensorsCopy","parse","response","editActuatorName","act","addSensor","addActuator","addConnection","newConnection","connectionsCopy","connection_name","changeSensorState","sensorState","deleteConnection","delConState","filter","con","deleteSensor","delSensorState","deleteActuator","delActuatorState","actuatorsCopy","setInterval","reqTimer","userActuators","connectionsList","modalAct","modalSen","connection","sensor_mac_address","actuator_mac_address","newName","App","exact","path","component","Boolean","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"mTAGaA,EAAkBC,0BAuEhBC,E,4MAjEXC,MAAQ,CACNC,MAAM,OACLC,QAAQ,GAERC,UAAU,GAEVC,MAAM,M,EA+BVC,WAAa,SAACC,GACX,EAAKC,SAAS,CAACN,MAAMK,K,EAKxBE,UAAY,SAACC,GACV,EAAKF,SAAS,CAACH,MAAMK,IACrBC,QAAQC,IAAI,EAAKX,MAAMI,MAAM,kB,4LA9BhCQ,KAAKC,QAAQC,S,uBAEO,yD,SACYC,MADZ,0D,cACXC,E,gBACmBA,EAAgBC,O,cAAnCC,E,OAENN,KAAKL,SAAS,CAACL,QAASgB,EAAYC,kBAGlB,6D,UACYJ,MADZ,8D,eACZK,E,iBACqBA,EAAiBH,O,QAAtCI,E,OAENT,KAAKL,SAAS,CAACJ,UAAWkB,EAAcC,cAGxCZ,QAAQC,IAAI,YAAYC,KAAKZ,MAAMG,W,sIAsBtC,OAEH,kBAACN,EAAgB0B,SAAjB,CAA0BC,MAAK,eAAOZ,KAAKZ,MAAZ,CAAmBK,WAAWO,KAAKP,WAAYG,UAAUI,KAAKJ,aAE5FI,KAAKa,MAAMC,c,GA5DoBC,aCFzBC,E,kLAUD,IAAMC,EAAIC,OAAOD,EACjBE,SAASC,iBAAiB,oBAAoB,WAC3C,IAAIC,EAAQF,SAASG,iBAAiB,gBACtBL,EAAEM,YAAYC,KAAKH,EAAO,OAG5CF,SAASC,iBAAiB,oBAAoB,WAC5C,IAAIC,EAAQF,SAASG,iBAAiB,qBACtBL,EAAEQ,qBAAqBD,KAAKH,EAAO,S,+BAQ5D,IAAMK,EAAkB1B,KAAKC,QAAQX,QAAQqC,OAAS3B,KAAKC,QAAQX,QAAQsC,KAAI,SAAAC,GAC5E,OAIG,4BAAI,uBAAGC,MAAM,6BAA6BC,MAAO,CAACC,OAAQ,QAASC,IAAKJ,EAAOK,IAAKL,EAAOM,YAAvF,qBAAmHN,EAAOO,iBAMhI,yBAAKC,UAAU,mBAAkB,sCAM/BC,EAAoBtC,KAAKC,QAAQV,UAAUoC,OAAS3B,KAAKC,QAAQV,UAAUqC,KAAI,SAAAW,GAClF,OAIG,4BAAI,uBAAGT,MAAM,6BAA6BC,MAAO,CAACC,OAAQ,QAASC,IAAKM,EAASL,IAAKK,EAASJ,YAA3F,oBAAsHI,EAASH,iBAMrI,yBAAKC,UAAU,mBAAkB,sCAUjC,OASJ,6BACCrC,KAAKC,QAAQuC,gBAMd,6BAAK,wBAAIH,UAAU,mBAAd,cACL,wBAAIP,MAAM,eACR,4BACE,yBAAKA,MAAM,sBACT,uBAAGA,MAAM,kBAAiB,uBAAGA,MAAM,iEAAgE,uBAAGA,MAAM,kBAAT,SADrG,UAGE,0BAAMA,MAAM,wBAAwB9B,KAAKC,QAAQX,QAAQqC,SAC3D,yBAAKG,MAAM,oBAAmB,2BAAIJ,OAQnC,GAIF1B,KAAKC,QAAQuC,gBAEd,6BACA,wBAAIV,MAAM,eACR,4BACE,yBAAKA,MAAM,sBACT,uBAAGA,MAAM,kBAAiB,uBAAGA,MAAM,iEAAgE,uBAAGA,MAAM,kBAAT,SADrG,YAGE,0BAAMA,MAAM,wBAAwB9B,KAAKC,QAAQV,UAAUoC,SAC7D,yBAAKG,MAAM,oBAAmB,2BAAIQ,OAQnC,Q,GApHuBvB,aAAnBC,EAGIyB,YAAcxD,EA2HV+B,IC/HF0B,EAAcxD,0BCMrByD,GDH8B5B,Y,kNCIlC3B,MAAO,CACLwD,MAAM,I,EA6EVC,UAAY,SAACC,GAEXhD,QAAQC,IAAI+C,GAAGhD,QAAQC,IAAI,QACfoB,SAAS4B,eAAe,UAC1B5B,SAAS4B,eAAe,U,EAqBnCC,SAAU,WAGT,OADA,EAAK/C,QAAQR,WAAW,OACjB,O,kEAlGgB,IAAD,OAElB,IAAIO,KAAKC,QAAQgD,UAAU,CACzB,IAAMhC,EAAIC,OAAOD,EAAEA,EAAEiC,WACrB/B,SAASC,iBAAiB,oBAAoB,WAC1C,IAAIC,EAAQF,SAASG,iBAAiB,UACtBL,EAAEkC,MAAM3B,KAAKH,EAAO,OAGtCF,SAASC,iBAAiB,oBAAoB,WAC5C,IAAIC,EAAQF,SAASG,iBAAiB,UACtBL,EAAEmC,WAAW5B,KAAKH,EAAO,OAO7C,IAEMgC,EAFInC,OAAOoC,SAASC,KAEFC,MADd,aACyB,GACnCxD,KAAKL,SAAS,CAACiD,MAAMS,IAUnBlD,MAAM,kCAAkCkD,EAAW,CACvDI,OAAQ,MACRC,QAAS,CACP,cAAkB1D,KAAKZ,MAAMuE,aAI9BC,MAAK,SAAAC,GAAG,OAAIA,EAAIxD,UAChBuD,MAAK,SAAAE,GAAU,EAAKnE,SAAS,CAACoE,YAAaD,EAAKvD,kBAAmBT,QAAQC,IAAI,EAAKX,MAAM2E,gBAC1FC,OAAM,SAAAC,GAASnE,QAAQC,IAAIkE,MAOlCnE,QAAQC,IAAI,WAAWC,KAAKC,QAAQT,S,oCAQ9B,IAAMyB,EAAIC,OAAOD,EAAEA,EAAEiC,WACrB/B,SAASC,iBAAiB,oBAAoB,WAC1C,IAAIC,EAAQF,SAASG,iBAAiB,UACtBL,EAAEkC,MAAM3B,KAAKH,EAAO,OAGtCF,SAASC,iBAAiB,oBAAoB,WAC5C,IAAIC,EAAQF,SAASG,iBAAiB,UACtBL,EAAEmC,WAAW5B,KAAKH,EAAO,S,+BA0CrC,IAAD,OAGT6C,EAAgB,GAGKlE,KAAKC,QAAQX,QAAQqC,QAAS3B,KAAKC,QAAQX,QAAQsC,KAAI,SAAAC,GAEhFqC,EAAgBC,KAAK,4BAGjB,4BAAKtC,EAAOM,aACZ,4BAAMN,EAAOO,aACb,4BAAKP,EAAOuC,kBAOKpE,KAAKC,QAAQV,UAAUoC,QAAS3B,KAAKC,QAAQV,UAAUqC,KAAI,SAAAW,GAG5E2B,EAAgBC,KAAK,4BAEjB,4BAAK5B,EAASJ,aACd,4BAAKI,EAASH,aACd,4BAAKG,EAAS6B,kBAaZpE,KAAKC,QAAQoE,MAEdrE,KAAKC,QAAQV,UAAUoC,QAAS3B,KAAKC,QAAQV,UAAUqC,KAAI,SAAAW,GAMpE,OAAOA,KAwBC,OAEE,kBAACG,EAAY4B,SAAb,MAAuB,SAACC,GAEJA,EAAtBC,SAAsBD,EAAZE,SAMlB,OAGA,6BAGI,yBAAKpC,UAAU,UAIX,uCAAa,EAAKjD,MAAMwD,OAM9B,yBAAKV,GAAG,SAASJ,MAAM,SACrB,yBAAKA,MAAM,iBACT,iDAIA,yBAAKA,MAAM,uBACb,gCACE,4BAAQlB,MAAM,IAAI8D,UAAQ,EAACC,UAAQ,GAAnC,sBACA,4BAAQ/D,MAAM,KAAd,YACA,4BAAQA,MAAM,KAAd,YACA,4BAAQA,MAAM,KAAd,aAEF,iCAIF,yBAAKkB,MAAM,wBACT,gCACE,4BAAQlB,MAAM,GAAG8D,UAAQ,EAACC,UAAQ,GAAlC,wBACA,4BAAQ/D,MAAM,KAAd,aAGF,2BAAOgE,KAAK,OAAMC,YAAY,uBAC9B,kCAQA,yBAAK/C,MAAM,gBACT,uBAAGyB,KAAK,KAAKzB,MAAM,4CAAnB,WAGE,4BAAQA,MAAM,6CAA8CgD,cAAY,SAAS/C,MAAO,CAACC,OAAQ,QAAS+C,QAAS,EAAKC,eAAxH,kBAER,2BAAO3C,UAAU,YACT,+BACE,4BACI,2CACA,0CACA,6CAIN,+BAGG6B,a,GAtQenD,cAApB4B,EAMKF,YAAcxD,EAgRV0D,QCzRTsC,G,MAAe,uCAGfC,E,4MACLC,YAAa,E,EAGb/F,MAAQ,CAETuE,UAAU,qRAEVI,YAAY,GAEZS,SAAS,GACTY,SAAS,GACTC,GAdc,SAedC,WAAU,G,EAkBTC,IAAM,SAACzC,EAAE2B,GACRA,EAAS3B,I,EAGV0C,kBAAoB,SAAC1C,GACpB,EAAKnD,SAAS,CACb6E,SAAU1B,EAAE2C,OAAO7E,S,EAOrB8E,iBAAmB,SAAC5C,GACnB,EAAKnD,SAAS,CAEbyF,SAAUtC,EAAE2C,OAAO7E,S,EAMrB+E,YAAc,WACb7F,QAAQC,IAAI,OACZD,QAAQC,IAAI,UAEZ,sBAAC,8BAAA6F,EAAA,sEAC0BzF,MAAM8E,EAAa,QAAS,CACpDxB,OAAQ,OACRC,QAAS,CACV,OAAU,mBACV,eAAgB,oBAIfmC,KAAMC,KAAKC,UAAU,CAAC,SAAW,EAAK3G,MAAMoF,SAAW,SAAW,EAAKpF,MAAMgG,aAT/E,cACMY,EADN,gBAYsBA,EAAY3F,OAZlC,OAYM4F,EAZN,OAeA,EAAKtG,SAAS,CAAEgE,UA1EL,SA0EuBsC,EAAQC,eAC1CpG,QAAQC,IAAI,EAAKX,MAAMuE,WACvBxD,MAAM8E,EAAa,SAAS,EAAK7F,MAAMoF,SAAU,CACnDf,OAAQ,MACRC,QAAS,CACP,cAAkB,EAAKtE,MAAMuE,aAK7BC,MAAK,SAAAC,GAAG,OAAIA,EAAIxD,UAChBuD,MAAK,SAAAE,GAAU,EAAKnE,SAAS,CAACoE,YAAaD,EAAKvD,kBAAmBT,QAAQC,IAAI,EAAKX,MAAM2E,gBAC1FC,OAAM,SAAAC,GAASnE,QAAQC,IAAIkE,MA3B3B,0CAAD,GA8BFnE,QAAQC,IAAI,SAAU,EAAKX,MAAMuE,WACjC7D,QAAQC,IAAI,EAAKX,MAAMgG,W,EAYtBe,aAAe,WAIhB,IAAIC,EAEJ,EAAKhH,MAAMkG,UAAY,OAAO,EAAKlG,MAAMoF,SAAWsB,KAAKC,UAAU,KAC/DM,EAAMD,EAAgBE,QAAQ,KAAK,IAEvC,OADAF,EAAiBC,G,EAMhBE,SAAW,WA2CV,OAzCA,sBAAC,sBAAAX,EAAA,sEAC0BzF,MAAM8E,EAAa,QAAS,CACpDxB,OAAQ,OAERC,QAAS,CACV,OAAU,mBACV,eAAgB,oBAMfmC,KAAMC,KAAKC,UAAU,CAAC,SAAW,EAAK3G,MAAMoF,SAAW,SAAW,EAAKpF,MAAMgG,aAE5ExB,MAAK,SAAC4C,GAKR,OAJJ1G,QAAQC,IAAIyG,EAAKC,QACjB3G,QAAQC,IAAI,EAAKX,MAAMkG,WACV,KAAbkB,EAAKC,OAAa,EAAK9G,SAAS,CAAC2F,WAAU,IAAS,EAAK3F,SAAS,CAAC2F,WAAU,IAElEkB,EAAKnG,UAEVuD,MAAK,SAAAE,GAKP,OAAOA,KAELF,MAAM,SAACE,GAAS,EAAKnE,SAAS,CAACgE,UAAUG,EAAKoC,kBAEhDlC,OAAM,SAAUC,GAGhBnE,QAAQC,IAAI,uBAAwBkE,MAjCrC,wDAAD,GAyCO,EAAK7E,MAAMuE,W,kEA1IlB3D,KAAKmF,YAAa,EACRjE,OAAOD,EACjBjB,KAAKC,QAAQR,WAAW,W,6CAQxBO,KAAKmF,YAAa,I,+BAgJEnF,KAAKC,QAAnBR,WAKR,OAIA,yBAAKqC,MAAM,QAGV,yBAAKA,MAAM,qCACV,yBAAKA,MAAM,QAEV,yBAAKA,MAAM,yCACV,2CAGD,yBAAKA,MAAM,gBACV,yBAAKA,MAAM,cACV,2BAAO4E,IAAI,YAAX,YACA,2BAAO9B,KAAK,OAAO1C,GAAG,WAAWyE,SAAU3G,KAAKwF,qBAC3C,6BAEN,yBAAK1D,MAAM,cACV,2BAAO4E,IAAI,YAAX,YACA,2BAAO9B,KAAK,WAAW1C,GAAG,WAAWyE,SAAU3G,KAAK0F,oBAC/C,6BAIN,yBAAK5D,MAAM,cACX,kBAAC,IAAD,CAAM8E,GAAI,CAACC,SAAS7G,KAAKmG,eAAe/G,MAAM,CAAC0H,KAAM9G,KAAKZ,MAAMoF,SAAU3E,MAAMG,KAAKZ,MAAMuE,UAAWa,SAASxE,KAAKZ,MAAMoF,SAAUuC,KAAK/G,KAAKZ,MAAMgG,YACnJ,4BAAQtD,MAAM,oCAAqCiD,SAAU/E,KAAKmG,aAAanG,KAAKuG,WAApF,WAEK,qC,GAjNcxF,aAAlBmE,EAEEzC,YAAcxD,EAmOPiG,Q,QCsvBA8B,E,4MAz9BX5H,MAAM,CACFuE,UAAU,GACVa,SAAS,IACTY,SAAS,GACTtB,KAAK,CAACvD,gBAAgB,CAAC,EAAE,EAAE,GAAG0G,kBAAkB,CAAC,EAAE,GAAGC,oBAAoB,CAAC,IAC3EC,kBAAkB,IAClBC,QAAQ,GACRC,QAAQ,GACRC,QAAQ,GACRC,GAAG,MACHC,IAAI,qCACJC,gBAAgB,gBAChBC,YAAW,EACXC,cAAa,EACbC,kBAAkB,IAClBC,aAAa,YACbC,eAAe,a,EAqHvBC,eAAgB,SAAC7F,GACjB,EAAKvC,SAAS,CAAC+H,YAAW,IAC1B,EAAK/H,SAAS,CAACgI,cAAa,IAG5B7H,QAAQC,IAAI,OAAO,EAAKX,MAAMwI,kBAAkB,SAChD,EAAKjI,SAAS,CAACiI,kBAAkB1F,IACjC,IAAI8F,EAAW,GACLC,EAAE,EACY,EAAK7I,MAAM0E,KAAKvD,gBAAgBqB,KAAI,SAAAC,GAEnDA,EAAOO,aAAa,EAAKhD,MAAMwI,mBAAmB,EAAKxI,MAAMqI,kBACtEQ,EAAE,EAAK7I,MAAMqI,gBACb5F,EAAOM,YAAY8F,EACnBnI,QAAQC,IAAI,SAASkI,IAQfD,EAAW7D,KAAKtC,GAKd/B,QAAQC,IAAIiI,MAIpB,GAAG,EAAK5I,MAAMqI,gBAAgB,CAExB,IAAIS,EAAcpC,KAAKqC,MAAMrC,KAAKC,UAAU,EAAK3G,MAAM0E,OAEtDoE,EAAY3H,gBAAkByH,EAC9BlI,QAAQC,IAAImI,GACZ,EAAKvI,SAAS,CACXmE,KAAKoE,IAETpI,QAAQC,IAAI,eAAemC,GAEjC/B,MAAM,EAAKf,MAAMoI,IAAI,SAAS,EAAK3G,MAAMyC,SAASlE,MAAMoF,SAAS,mDAAmDtC,EAAI,CACtHuB,OAAQ,MACRC,QAAS,CACP,cAAiB,EAAKtE,MAAMuE,UAC3B,eAAe,oBAElBkC,KAAKC,KAAKC,UAAU,CAElB,YAAe,EAAK3G,MAAMqI,oBAK3B7D,MAAK,SAASwE,GACf,OAAOA,EAAS/H,UACfuD,MAAK,SAASE,GACfhE,QAAQC,IAAI,cAAemC,Q,EAS7BmG,iBAAkB,SAACnG,GACjB,EAAKvC,SAAS,CAAC+H,YAAW,IAC1B,EAAK/H,SAAS,CAACgI,cAAa,IAE5B7H,QAAQC,IAAI,OAAOmC,GACnB,IAAI8F,EAAW,GACLC,EAAE,EACY,EAAK7I,MAAM0E,KAAKmD,kBAAkBrF,KAAI,SAAA0G,GAErDA,EAAIlG,aAAaF,GAAI,EAAK9C,MAAMqI,kBACzCQ,EAAE,EAAK7I,MAAMqI,gBACba,EAAInG,YAAY8F,GAOVD,EAAW7D,KAAKmE,MAWd,GAHAxI,QAAQC,IAAIiI,GAGT,EAAK5I,MAAMqI,gBAAgB,CAGhC,IAAIS,EAAcpC,KAAKqC,MAAMrC,KAAKC,UAAU,EAAK3G,MAAM0E,OAEtDoE,EAAYjB,kBAAoBe,EAChClI,QAAQC,IAAImI,GACZ,EAAKvI,SAAS,CACXmE,KAAKoE,IAGjB/H,MAAM,EAAKf,MAAMoI,IAAI,SAAS,EAAK3G,MAAMyC,SAASlE,MAAMoF,SAAS,yDAAyDtC,EAAI,CAC5HuB,OAAQ,MACRC,QAAS,CACP,cAAiB,EAAKtE,MAAMuE,UAC3B,eAAe,oBAElBkC,KAAKC,KAAKC,UAAU,CAElB,YAAe,EAAK3G,MAAMqI,oBAK3B7D,MAAK,SAASwE,GACf,OAAOA,EAAS/H,UACfuD,MAAK,SAASE,GACfhE,QAAQC,IAAI,cAAemC,Q,EAa7BqG,UAAY,WAEVpI,MAAM,EAAKf,MAAMoI,IAAI,oCAAoC,EAAKpI,MAAMyI,aAAc,CAChFpE,OAAQ,MACRC,QAAS,CACP,cAAiB,EAAKtE,MAAMuE,UAC3B,eAAe,oBAElBkC,KAAKC,KAAKC,UAAU,CAElB,YAAe,qBACf,YAAe,KACf,MAAS,EACT,YAAe,iBACf,QAAW,EAAK3G,MAAM0E,KAAK5B,OAI5B0B,MAAK,SAASwE,GACf,OAAOA,EAAS/H,UACfuD,MAAK,SAASE,GACfhE,QAAQC,IAAI,oBAAqB,W,EAOrCyI,YAAc,WAEZrI,MAAM,EAAKf,MAAMoI,IAAI,SAAS,EAAK3G,MAAMyC,SAASlE,MAAMoF,SAAS,wCAAwC,EAAKpF,MAAM0I,eAAgB,CAClIrE,OAAQ,MACRC,QAAS,CACP,cAAiB,EAAKtE,MAAMuE,UAC3B,eAAe,oBAElBkC,KAAKC,KAAKC,UAAU,CAElB,YAAe,qBACf,YAAe,KAEf,YAAe,mBACf,QAAW,EAAK3G,MAAM0E,KAAK5B,OAI5B0B,MAAK,SAASwE,GACf,OAAOA,EAAS/H,UACfuD,MAAK,SAASE,GACfhE,QAAQC,IAAI,sBAAuB,W,EAQvC0I,cAAe,WAEf,IAAIC,EAAc,CAAC,gBAAkB,EAAKtJ,MAAM+H,kBAAkB,mBAAsB,EAAK/H,MAAMgI,QAAQ,qBAAuB,EAAKhI,MAAMiI,QAAQ,GAAM,EAAKjI,MAAM0E,KAAK5B,IAGnKyG,EAAkB7C,KAAKqC,MAAMrC,KAAKC,UAAU,EAAK3G,MAAM0E,OAExD6E,EAAgBzB,oBAAqByB,EAAgBzB,oBAAoBvF,QAAU+G,EACnF,EAAK/I,SAAS,CACXmE,KAAK6E,IAMbxI,MAAM,EAAKf,MAAMoI,IAAI,SAAS,EAAK3G,MAAMyC,SAASlE,MAAMoF,SAAS,wBAAwBkE,EAAcE,gBAAiB,CACtHnF,OAAQ,OACRC,QAAS,CACP,cAAiB,EAAKtE,MAAMuE,UAC3B,eAAe,oBAElBkC,KAAKC,KAAKC,UAAU,CAElB,mBAAsB,EAAK3G,MAAMgI,QACjC,qBAAuB,EAAKhI,MAAMiI,QAClC,QAAW,EAAKjI,MAAM0E,KAAK5B,OAI5B0B,MAAK,SAASwE,GACf,OAAOA,EAAS/H,UACfuD,MAAK,SAASE,GACfhE,QAAQC,IAAI,sBAlBL,W,EAgCP8I,kBAAoB,SAAC3G,GAEnBpC,QAAQC,IAAI,eAAemC,GAG3B,IAAI4G,EAAY,GACZb,EAAE,EACY,EAAK7I,MAAM0E,KAAKvD,gBAAgBqB,KAAI,SAAAC,GAEnDA,EAAOO,aAAaF,IAC7B+F,GAAGpG,EAAOzC,MACVyC,EAAOzC,MAAM6I,EACC,GAAdpG,EAAOzC,MAAcyC,EAAOzC,MAAM,EAAIyC,EAAOzC,MAAM,GAO3C0J,EAAY3E,KAAKtC,MAKnB/B,QAAQC,IAAI+I,GAEZ,IAAIZ,EAAcpC,KAAKqC,MAAMrC,KAAKC,UAAU,EAAK3G,MAAM0E,OAEtDoE,EAAY3H,gBAAkBuI,EAC9BhJ,QAAQC,IAAImI,GACZ,EAAKvI,SAAS,CACXmE,KAAKoE,IAWT/H,MAAM,EAAKf,MAAMoI,IAAI,oCAAoCtF,EAAI,CACzDuB,OAAQ,MACRC,QAAS,CACP,cAAiB,EAAKtE,MAAMuE,UAC5B,eAAe,oBAEjBkC,KAAKC,KAAKC,UAAU,CAIlB,MAAQkC,EACR,QAAU,MAIXrE,MAAK,SAASwE,GACf,OAAOA,EAAS/H,UACfuD,MAAK,SAASE,GACfhE,QAAQC,IAAI,iBAAiBmC,O,EAYvC6G,iBAAmB,SAAC7G,GACpBpC,QAAQC,IAAI,QAAQmC,EAAGtB,OAGvB,IAAIoI,EAAc,EAAK5J,MAAM0E,KAAKoD,oBAAoB+B,QAAO,SAAAC,GAC7D,OAAOA,EAAIN,kBAAoB1G,KAM3ByG,EAAkB7C,KAAKqC,MAAMrC,KAAKC,UAAU,EAAK3G,MAAM0E,OAExD6E,EAAgBzB,oBAAsB8B,EAEtC,EAAKrJ,SAAS,CACXmE,KAAK6E,IAMXxI,MAAM,EAAKf,MAAMoI,IAAI,SAAS,EAAK3G,MAAMyC,SAASlE,MAAMoF,SAAS,wBAAwBtC,EAAI,CACzFuB,OAAQ,SACRC,QAAS,CACP,cAAiB,EAAKtE,MAAMuE,UAC5B,eAAe,oBAEjBkC,KAAKC,KAAKC,UAAU,CAIlB,QAAW,EAAK3G,MAAM0E,KAAK5B,OAI5B0B,MAAK,SAASwE,GACf,OAAOA,EAAS/H,UACfuD,MAAK,SAASE,GACfhE,QAAQC,IAAI,sBAAsBmC,O,EAQtCiH,aAAe,SAACjH,GACdpC,QAAQC,IAAI,QAAQmC,EAAGtB,OAGvB,IAAIwI,EAAiB,EAAKhK,MAAM0E,KAAKoD,oBAAoB+B,QAAO,SAAAC,GAChE,OAAOA,EAAIN,kBAAoB1G,KAM3BgG,EAAcpC,KAAKqC,MAAMrC,KAAKC,UAAU,EAAK3G,MAAM0E,OAEpDoE,EAAYhB,oBAAsBkC,EAElC,EAAKzJ,SAAS,CACXmE,KAAKoE,IAMX/H,MAAM,EAAKf,MAAMoI,IAAI,SAAS,EAAK3G,MAAMyC,SAASlE,MAAMoF,SAAS,uCAAuCtC,EAAI,CACxGuB,OAAQ,SACRC,QAAS,CACP,cAAiB,EAAKtE,MAAMuE,UAC5B,eAAe,oBAEjBkC,KAAKC,KAAKC,UAAU,CAIlB,QAAW,EAAK3G,MAAM0E,KAAK5B,OAI5B0B,MAAK,SAASwE,GACf,OAAOA,EAAS/H,UACfuD,MAAK,SAASE,GACfhE,QAAQC,IAAI,kBAAkBmC,O,EAUpCmH,eAAiB,SAACnH,GAChBpC,QAAQC,IAAI,QAAQmC,EAAGtB,OAGvB,IAAI0I,EAAmB,EAAKlK,MAAM0E,KAAKoD,oBAAoB+B,QAAO,SAAAC,GAClE,OAAOA,EAAIN,kBAAoB1G,KAM3BqH,EAAgBzD,KAAKqC,MAAMrC,KAAKC,UAAU,EAAK3G,MAAM0E,OAEtDyF,EAAcrC,oBAAsBoC,EAEpC,EAAK3J,SAAS,CACXmE,KAAKyF,IAMXpJ,MAAM,EAAKf,MAAMoI,IAAI,SAAS,EAAK3G,MAAMyC,SAASlE,MAAMoF,SAAS,2CAA2CtC,EAAI,CAC5GuB,OAAQ,SACRC,QAAS,CACP,cAAiB,EAAKtE,MAAMuE,UAC5B,eAAe,oBAEjBkC,KAAKC,KAAKC,UAAU,CAIlB,QAAW,EAAK3G,MAAM0E,KAAK5B,OAI5B0B,MAAK,SAASwE,GACf,OAAOA,EAAS/H,UACfuD,MAAK,SAASE,GACfhE,QAAQC,IAAI,qBAAqBmC,O,yDA1iBvB,IAAD,OAEQsH,aAAY,WAC3B1J,QAAQC,IAAI,cAMfI,MAAM,EAAKf,MAAMoI,IAAI,SAAS,EAAK3G,MAAMyC,SAASlE,MAAMoF,SAAU,CACjEf,OAAQ,MACRC,QAAS,CACP,cAAiB,EAAKtE,MAAMuE,aAK7BC,MAAK,SAAAC,GAAG,OAAIA,EAAIxD,UAChBuD,MAAK,SAAAE,GAAS,EAAKnE,SAAS,CAACmE,KAAKA,OAClCE,OAAM,SAAAC,GAASnE,QAAQC,IAAIkE,QAEvB,O,0CAQc,IAAD,OAObhD,EAAIC,OAAOD,EAAEA,EAAEiC,WACrB/B,SAASC,iBAAiB,oBAAoB,WAC1C,IAAIC,EAAQF,SAASG,iBAAiB,UACtBL,EAAEkC,MAAM3B,KAAKH,EAAO,OAGtCF,SAASC,iBAAiB,oBAAoB,WAC5C,IAAIC,EAAQF,SAASG,iBAAiB,UACtBL,EAAEmC,WAAW5B,KAAKH,EAAO,OAUhD,sBAAC,8BAAAuE,EAAA,sEAC0BzF,MAAM,EAAKf,MAAMoI,IAAI,SAAU,CACvD/D,OAAQ,OACRC,QAAS,CACV,OAAU,mBACV,eAAgB,oBAGfmC,KAAMC,KAAKC,UAAU,CAAC,SAAW,EAAKlF,MAAMyC,SAASlE,MAAMoF,SAAW,SAAW,EAAK3D,MAAMyC,SAASlE,MAAM2H,SAR7G,cACMf,EADN,gBAWsBA,EAAY3F,OAXlC,OAWM4F,EAXN,OAcG,EAAKtG,SAAS,CAAEgE,UAAW,UAAUsC,EAAQC,eAIhD/F,MAAM,EAAKf,MAAMoI,IAAI,SAAS,EAAK3G,MAAMyC,SAASlE,MAAMoF,SAAU,CACpEf,OAAQ,MACRC,QAAS,CACP,cAAiB,EAAKtE,MAAMuE,aAK5BC,MAAK,SAAAC,GAAG,OAAIA,EAAIxD,UAChBuD,MAAK,SAAAE,GAAShE,QAAQC,IAAI+D,GAAM,EAAKnE,SAAS,CAACmE,KAAKA,OACpDE,OAAM,SAAAC,GAASnE,QAAQC,IAAIkE,MAC3B,EAAKwF,WA7BL,0CAAD,K,iCA+CA3J,QAAQC,IAAI,S,+BA+cD,IAAD,OA0CAmE,EAAgB,GAChBH,EAAY,GACZ2F,EAAc,GAEdC,EAAgB,GAEhBC,EAAS,GACTC,EAAW,GAEG7J,KAAKZ,MAAM0E,KAAKvD,gBAAgBoB,QAAS3B,KAAKZ,MAAM0E,KAAKvD,gBAAgBqB,KAAI,SAAAC,GAE3FqC,EAAgBC,KAAK,4BAGjB,4BAAI,uBAAGrC,MAAM,iBAAiByB,KAAK,WAAU,mCAAGlB,UAAU,cAAa0C,QAAS,WAAK,EAAKgD,eAAelG,EAAOO,eAAnE,YAA4F,iDAA5F,SAAyJP,EAAOM,aAC7M,4BAAMN,EAAOO,aACb,4BAAKP,EAAOuC,eAK5BL,EAAYI,KAEH,4BAEJ,4BAAKtC,EAAOM,aACX,4BAAKN,EAAOO,aACZ,4BAAMP,EAAOzC,OACb,uBAAG2F,QAAS,WAAK,EAAK8D,kBAAkBhH,EAAOO,cAAeC,UAAU,kDAAxE,WACA,uBAAG0C,QAAS,WAAK,EAAKoE,aAAatH,EAAOO,cAAeC,UAAU,iDAAnE,YAcNwH,EAAS1F,KAGP,4BAAQvD,MAAOiB,EAAOO,aAAcP,EAAOM,iBAoBpCnC,KAAKZ,MAAM0E,KAAKmD,kBAAkBtF,QAAS3B,KAAKZ,MAAM0E,KAAKmD,kBAAkBrF,KAAI,SAAAC,GAExF6H,EAAcvF,KAAK,4BAGhB,4BAAMtC,EAAOM,aACZ,4BAAKN,EAAOO,aAEZ,uBAAG2C,QAAS,WAAK,EAAKsE,eAAexH,EAAOO,cAAeC,UAAU,iDAArE,YAINuH,EAASzF,KAGP,4BAAQvD,MAAOiB,EAAOO,aAAeP,EAAOM,iBAWpBnC,KAAKZ,MAAM0E,KAAKmD,kBAAkBtF,QAAS3B,KAAKZ,MAAM0E,KAAKmD,kBAAkBrF,KAAI,SAAAC,GAE/FqC,EAAgBC,KAAK,4BAGjB,4BAAI,uBAAGrC,MAAM,iBAAiByB,KAAK,WAAU,uBAAGwB,QAAS,WAAK,EAAKsD,iBAAiBxG,EAAOO,cAAeC,UAAU,iDAAvE,SAAoIR,EAAOM,aACxL,4BAAMN,EAAOO,aACb,4BAAKP,EAAOuC,kBAmBKpE,KAAKZ,MAAM0E,KAAKoD,oBAAoBvF,QAAS3B,KAAKZ,MAAM0E,KAAKoD,oBAAoBtF,KAAI,SAAAkI,GAExGH,EAAgBxF,KAAK,wBAAIlC,IAAK,GAG1B,4BAAK6H,EAAWlB,iBAChB,4BAAMkB,EAAWC,oBACjB,4BAAKD,EAAWE,sBAChB,uBAAGjF,QAAS,WAAK,EAAKgE,iBAAiBe,EAAWlB,kBAAmBvG,UAAU,iDAA/E,eAiClB,OAIA,6BAGE,yBAAKA,UAAU,UAIX,uCAAarC,KAAKa,MAAMyC,SAASlE,MAAMoF,UAEvC,wBAAIzC,MAAO,CAACC,OAAQ,SAApB,WAON,yBAAKE,GAAG,SAASJ,MAAM,SACrB,yBAAKA,MAAM,iBACT,2CACA,2EACA,2BAAO8C,KAAK,OAAMC,YAAY,wBAAwB8B,SA/CpC,SAAC7D,GAEpB,IAAImH,EAASnH,EAAE2C,OAAO7E,MAGxB,EAAKjB,SAAS,CAAC8H,gBAAgBwC,IAC/B,EAAKtK,SAAS,CAAC+H,YAAW,QA2CzB,yBAAK5F,MAAM,gBACT,uBAAIA,MAAM,gDAAgDiD,QAxCzC,SAACkF,GAErBnK,QAAQC,IAAI,EAAKX,MAAMsI,YAEpB,EAAKtI,MAAMsI,WACd,EAAKK,iBAEH,EAAKM,qBAiCJ,YAQJ,yBAAKnG,GAAG,SAASJ,MAAM,SACrB,yBAAKA,MAAM,iBACT,0CACA,8DACA,2BAAO8C,KAAK,OAAMC,YAAY,iCAAiC8B,SA5OhD,SAAC7D,GAClB,IAAI+E,EAAc/E,EAAE2C,OAAO7E,MAC3B,EAAKjB,SAAS,CAACkI,aAAaA,QA6O5B,yBAAK/F,MAAM,gBACT,uBAAIA,MAAM,gDAAgDiD,QAAS/E,KAAKuI,WAAxE,SAOJ,yBAAKrG,GAAG,SAASJ,MAAM,SACrB,yBAAKA,MAAM,iBACT,4CACA,gEACA,2BAAO8C,KAAK,OAAMC,YAAY,iCAAiC8B,SArP9C,SAAC7D,GACpB,IAAIgF,EAAgBhF,EAAE2C,OAAO7E,MAC7B,EAAKjB,SAAS,CAACmI,eAAeA,QAsP9B,yBAAKhG,MAAM,gBACT,uBAAIA,MAAM,gDAAgDiD,QAAS/E,KAAKwI,aAAxE,SAOJ,yBAAKtG,GAAG,SAASJ,MAAM,SACrB,yBAAKA,MAAM,iBACT,iDAIA,yBAAKA,MAAM,uBACb,4BAAQ6E,SA5PqB,SAAC7D,GAEhC,EAAKnD,SAAS,CAACyH,QAAQtE,EAAE2C,OAAO7E,SA0POyB,UAAU,mBAC7C,4BAAQzB,MAAM,IAAI8D,UAAQ,EAACC,UAAQ,GAAnC,sBACCkF,GAEH,iCAIF,yBAAK/H,MAAM,wBACT,4BAAQ6E,SA7PsB,SAAC7D,GACvBhD,QAAQC,IAAI+C,EAAE2C,OAAO7E,OACrB,EAAKjB,SAAS,CAAC0H,QAAQvE,EAAE2C,OAAO7E,QAChCd,QAAQC,IAAI,EAAKX,MAAMiI,QAAQ,SA0PDhF,UAAU,mBAC9C,4BAAQzB,MAAM,GAAG8D,UAAQ,EAACC,UAAQ,GAAlC,wBACAiF,GAIF,2BAAOhF,KAAK,OAAMC,YAAY,qBAAqB8B,SAjRzB,SAAC7D,GAErB,EAAKnD,SAAS,CAACwH,kBAAkBrE,EAAE2C,OAAO7E,WAgRhD,kCAQA,yBAAKkB,MAAM,gBACT,4BAAQA,MAAM,2CAA2CiD,QAAS/E,KAAKyI,eAAvE,WAKJ,2BAAOpG,UAAU,YACX,+BACE,4BACI,2CACA,0CACA,6CAMN,+BAGG6B,IAKL,wBAAInC,MAAO,CAACC,OAAQ,SAApB,eACA,4BAAQF,MAAM,6CAA8CgD,cAAY,SAAS/C,MAAO,CAACC,OAAQ,SAAjG,kBACA,2BAAOK,UAAU,YACf,+BACE,4BACI,+CACA,uCACA,yCAIN,+BAAQsH,IAQV,wBAAI5H,MAAO,CAACC,OAAQ,SAApB,WACA,4BAAQF,MAAM,6CAA8CgD,cAAY,SAAS/C,MAAO,CAACC,OAAQ,SAAjG,gBACA,2BAAOK,UAAU,YAEf,+BACE,4BACI,2CACA,0CACA,8CAIN,mCAAU0B,IAOR,wBAAIhC,MAAO,CAACC,OAAQ,SAApB,aACJ,4BAAQF,MAAM,6CAA8CgD,cAAY,SAAS/C,MAAO,CAACC,OAAQ,SAAjG,gBACA,2BAAOK,UAAU,YAEf,+BACE,4BACI,2CACA,0CACA,8CAIN,mCAAUqH,U,GAn8BE3I,aCsCHmJ,MA7Bf,WACE,OAEE,oCAEA,kBAAC,IAAD,KACA,kBAAC,EAAD,KAKI,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAGC,UAAWnF,IAChC,kBAAC,IAAD,CAAOkF,KAAK,QAAOC,UAAW1H,IAC9B,kBAAC,IAAD,CAAOyH,KAAK,OAAMC,UAAWrD,QCnBjBsD,QACW,cAA7BpJ,OAAOoC,SAASiH,UAEe,UAA7BrJ,OAAOoC,SAASiH,UAEhBrJ,OAAOoC,SAASiH,SAAS/G,MACvB,2DCZNgH,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFvJ,SAAS4B,eAAe,SDyHpB,kBAAmB4H,WACrBA,UAAUC,cAAcC,MACrBjH,MAAK,SAAAkH,GACJA,EAAaC,gBAEd/G,OAAM,SAAAgH,GACLlL,QAAQkL,MAAMA,EAAMC,c","file":"static/js/main.01b87f9a.chunk.js","sourcesContent":["import React, {createContext, Component}from 'react';\r\n\r\n\r\nexport const DataBaseContext = createContext();\r\n\r\n\r\n class DataBaseContextC extends Component {\r\n\r\n  \r\n    state = {\r\n      uName:'User',\r\n       sensors:[],\r\n          \r\n       actuators:[],\r\n\r\n       authT:'11'\r\n       \r\n      \r\n    }\r\n\r\n\r\n    \r\n\r\n    async componentDidMount(){\r\nif(this.context.sensores){\r\n      {/* SENSOR */}\r\n      const sensorsUrl=\"http://192.168.0.117:5000/sensors_list/digital_sensors\";\r\n      const sensorsResponse= await fetch(sensorsUrl);\r\n      const sensorsData= await sensorsResponse.json();\r\n      \r\n      this.setState({sensors :sensorsData.digital_sensors})\r\n      {/* SENSOR */}\r\n      {/* ACTUATOR*/}\r\n      const actuatorUrl=\"http://192.168.0.117:5000/actuators_list/digital_actuators\";\r\n      const actuatorResponse= await fetch(actuatorUrl);\r\n      const actuatorsData= await actuatorResponse.json();\r\n      \r\n      this.setState({actuators :actuatorsData.connections})\r\n      \r\n      {/* ACTUATOR*/}\r\n      console.log('---------'+this.state.actuators)\r\n      \r\n   }\r\n}\r\n///CUSTOM FUNCTIONS\r\n\r\n   loginPageF = (uname) =>{\r\n      this.setState({uName:uname})\r\n     // return this.state.uName\r\n\r\n   }\r\n\r\n   sendToken = (token) =>{\r\n      this.setState({authT:token})\r\n      console.log(this.state.authT+'-------------')\r\n      \r\n   }\r\n   \r\n\r\n///CUSTOM FUNCTIONS\r\n    \r\nrender() { \r\n   return(\r\n\r\n<DataBaseContext.Provider value ={{...this.state, loginPageF:this.loginPageF, sendToken:this.sendToken}}>\r\n\r\n{this.props.children}\r\n\r\n</DataBaseContext.Provider>\r\n   );\r\n}\r\n\r\n\r\n}\r\nexport default DataBaseContextC;","import React, {Component}from 'react';\r\nimport {DataBaseContext} from './DataBaseContext'\r\n\r\n\r\n class optionMenu extends Component {\r\n    \r\n\r\n    static contextType = DataBaseContext;\r\n\r\n\r\n\r\n\r\n\r\n   componentDidMount() {\r\n      const M = window.M;\r\n      document.addEventListener('DOMContentLoaded', function() { \r\n         let elems = document.querySelectorAll('.collapsible');\r\n         let instances = M.Collapsible.init(elems, {});\r\n       });\r\n\r\n       document.addEventListener('DOMContentLoaded', function() {\r\n         let elems = document.querySelectorAll('.fixed-action-btn');\r\n         let instances = M.FloatingActionButton.init(elems, {}); \r\n       });\r\n\r\n\r\n    }\r\n    render(){ \r\n\r\n{/* SENSOR */}\r\nconst dataSensorsList = this.context.sensors.length ?(this.context.sensors.map(sensor =>{\r\n   return (\r\n     \r\n   \r\n\r\n      <li><a class=\"waves-effect red btn-large\" style={{margin: \"10px\"}} key={sensor.id}>{sensor.device_name}  ---------->  {sensor.mac_address}</a></li>\r\n\r\n   \r\n   )\r\n\r\n})\r\n):( <div className=\"sensor-notFound\"><h2>EMPTY</h2></div>)\r\n\r\n{/* SENSOR */}\r\n{/* ACTUATOR*/}\r\n\r\n\r\nconst dataActuatorsList = this.context.actuators.length ?(this.context.actuators.map(actuator =>{\r\n   return (\r\n     \r\n   \r\n\r\n      <li><a class=\"waves-effect red btn-large\" style={{margin: \"10px\"}} key={actuator.id}>{actuator.device_name}  ----------> {actuator.mac_address}</a></li>\r\n\r\n   \r\n   )\r\n\r\n})\r\n):( <div className=\"sensor-notFound\"><h2>EMPTY</h2></div>)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/* ACTUATOR*/}\r\n\r\n    return (\r\n     \r\n\r\n       \r\n       \r\n\r\n\r\n\r\n\r\n<div>\r\n{this.context.welcomeMenuPage ?(\r\n\r\n  \r\n\r\n\r\n\r\n<div><h3 className='red-text center'>MY DEVICES</h3>\r\n<ul class=\"collapsible\">\r\n  <li>\r\n    <div class=\"collapsible-header\">\r\n      <i class=\"material-icons\"><a class=\"btn-floating btn-large waves-effect waves-light red btn-small\"><i class=\"material-icons\">add</i></a></i>\r\n      SENSORS\r\n      <span class=\"badge red white-text\">{this.context.sensors.length}</span></div>\r\n    <div class=\"collapsible-body\"><p>{dataSensorsList}</p></div>\r\n  </li>\r\n \r\n</ul>\r\n</div>\r\n\r\n\r\n\r\n):('')}\r\n\r\n\r\n\r\n{this.context.welcomeMenuPage ?(   \r\n\r\n<div>\r\n<ul class=\"collapsible\">\r\n  <li>\r\n    <div class=\"collapsible-header\">\r\n      <i class=\"material-icons\"><a class=\"btn-floating btn-large waves-effect waves-light red btn-small\"><i class=\"material-icons\">add</i></a></i>\r\n      ACTUATORS\r\n      <span class=\"badge red white-text\">{this.context.actuators.length}</span></div>\r\n    <div class=\"collapsible-body\"><p>{dataActuatorsList}</p></div>\r\n  </li>\r\n \r\n</ul> \r\n\r\n</div>\r\n\r\n\r\n):('')}\r\n      \r\n\r\n\r\n</div>\r\n\r\n    )\r\n    }\r\n}\r\n\r\nexport default optionMenu;","import React, { Component, createContext } from 'react'\r\n\r\n\r\nexport const AuthContext = createContext(); \r\n\r\n\r\nclass   AuthContextProvider extends Component{\r\n\r\n\r\nstate = {\r\n    userName:'Ady'\r\n}\r\n\r\ncomponentDidUpdate(){\r\n\r\nthis.userCred()\r\n}   \r\n\r\nuserCred = (userName) =>{\r\n    this.setState({userName: userName})\r\n    //console.log(this.state.userName)\r\n   \r\n}\r\n//////RENDER////////////\r\n    render (){\r\n\r\n\r\n\r\n\r\n\r\n        return(\r\n<AuthContext.Provider value={{...this.state, userCred:this.userCred}}>\r\n{this.props.children}\r\n</AuthContext.Provider>\r\n        );\r\n\r\n        \r\n    }\r\n}\r\n\r\nexport default AuthContextProvider;","import React, { Component } from 'react';\r\nimport {DataBaseContext} from './DataBaseContext';\r\nimport {AuthContext} from './contexts/AuthContext'\r\nimport './WelcomePage.css';\r\n\r\n\r\n\r\n//Custom Functions\r\n\r\nclass WelcomePage extends Component {\r\n  state ={\r\n    userN:''\r\n  }\r\n  \r\n\r\n    static contextType = DataBaseContext;\r\n\r\n\r\n    componentDidMount() {\r\n      \r\n      if(!this.context.loginPage){\r\n        const M = window.M;M.AutoInit()\r\n        document.addEventListener('DOMContentLoaded', function() {\r\n            var elems = document.querySelectorAll('.modal');\r\n            var instances = M.Modal.init(elems, {});\r\n          });\r\n        \r\n          document.addEventListener('DOMContentLoaded', function() {\r\n            var elems = document.querySelectorAll('select');\r\n            var instances = M.FormSelect.init(elems, {});\r\n          });\r\n                  \r\n        } \r\n\r\n        ////get the name of the user from url -REGEX- LAST WORD\r\n\r\n        let userN=window.location.href;\r\n        let reg = /\\b(\\w+)$/g;\r\n        const nameFound = userN.match(reg)[0];\r\n        this.setState({userN:nameFound});\r\n        \r\n            \r\n\r\n\r\n        ////get the name of the user from url -REGEX\r\n\r\n\r\n  \r\n    \r\n          fetch('http://192.168.0.100:5000/user/'+nameFound, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization':  this.state.authToken\r\n            \r\n      }\r\n      })\r\n      .then(res => res.json())\r\n      .then(data => { this.setState({userSensors: data.digital_sensors}); console.log(this.state.userSensors)})\r\n      .catch(err => { console.log(err) })\r\n      \r\n      \r\n      \r\n      \r\n\r\n///this.context.loginPageF('sss')\r\nconsole.log('--------'+this.context.authT)\r\n\r\n        \r\n    }\r\n     \r\n\r\n    handleClick(){\r\n       \r\n      const M = window.M;M.AutoInit()\r\n      document.addEventListener('DOMContentLoaded', function() {\r\n          var elems = document.querySelectorAll('.modal');\r\n          var instances = M.Modal.init(elems, {});\r\n        });\r\n      \r\n        document.addEventListener('DOMContentLoaded', function() {\r\n          var elems = document.querySelectorAll('select');\r\n          var instances = M.FormSelect.init(elems, {});\r\n        });\r\n     \r\n        \r\n    }\r\n\r\n\r\ntestModal = (e) =>{\r\n\r\n  console.log(e);console.log('dddd')\r\n  var modal = document.getElementById(\"modal1\");\r\n  var btn = document.getElementById(\"myBtn\");\r\n  \r\n// Get the <span> element that closes the modal\r\n// var span = document.getElementsByClassName(\"close\")[0];\r\n\r\n// When the user clicks the button, open the modal \r\n\r\n//  e.target.style.display = \"block\";\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n dataName= () =>{\r\n\r\n  this.context.loginPageF('fff');\r\n  return 'aaa'\r\n}\r\n\r\n\r\n\r\n\r\n\r\n    render() { \r\n{/* SENSOR */}\r\n\r\nlet dataDevicesList=[];\r\nlet actuatorsListt=[];\r\n\r\n  let dataDevicesListtt= this.context.sensors.length ?(this.context.sensors.map(sensor =>{\r\n    \r\ndataDevicesList.push(<tr>\r\n    \r\n\r\n    <td>{sensor.device_name}</td>\r\n    <td >{sensor.mac_address}</td>\r\n    <td>{sensor.device_type}</td>\r\n\r\n    </tr>)\r\n\r\n}) \r\n): (' ')\r\n\r\nlet dataDevicesListt=this.context.actuators.length ?(this.context.actuators.map(actuator =>{\r\n    \r\n\r\n    dataDevicesList.push(<tr>\r\n\r\n        <td>{actuator.device_name}</td>\r\n        <td>{actuator.mac_address}</td>\r\n        <td>{actuator.device_type}</td>\r\n        \r\n        </tr>)\r\n\r\n}) \r\n): (' ')\r\n\r\n\r\n/// Devices for modal pop-up\r\n\r\n            \r\n           \r\n        \r\nlet thisT=this.context.hardC;\r\n\r\nlet tryS=this.context.actuators.length ?(this.context.actuators.map(actuator =>{\r\n    \r\n\r\n\r\n  \r\n  \r\nreturn actuator\r\n      \r\n     \r\n  \r\n\r\n}) \r\n): ('')\r\n\r\n\r\n\r\n/// Devices for modal pop-up\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n///RETURN ------------------------------------------------------\r\n        return(\r\n\r\n          <AuthContext.Consumer>{(authContext) =>{\r\n\t\r\n\tconst {userName, userCred} = authContext;\r\n \r\n\r\n\r\n\t\r\n\r\nreturn(\r\n\r\n\r\n<div>\r\n  \r\n    \r\n    <div className='center'>\r\n    \r\n    \r\n\r\n        <h3>Welcome {this.state.userN}</h3>\r\n        \r\n        \r\n        \r\n\r\n  \r\n  <div id=\"modal1\" class=\"modal\">\r\n    <div class=\"modal-content\">\r\n      <h4>Make a Connection</h4>\r\n\r\n\r\n\r\n      <div class=\"input-field col s12\">\r\n    <select >\r\n      <option value=\"0\" disabled selected>Choose your Sensor</option>\r\n      <option value=\"1\">Option 1</option>\r\n      <option value=\"2\">Option 2</option>\r\n      <option value=\"3\">Option 3</option>\r\n    </select>\r\n    <label></label>\r\n  </div>\r\n\r\n\r\n  <div class=\"input-field col s12 \">\r\n    <select >\r\n      <option value=\"\" disabled selected>Choose your Actuator</option>\r\n      <option value=\"1\">Option 1</option>\r\n      \r\n    </select>\r\n    <input type=\"text\"placeholder='Connection Name...'/>\r\n    <label></label>\r\n  </div>\r\n\r\n\r\n\r\n\r\n\r\n    </div >\r\n    <div class=\"modal-footer\">\r\n      <a href=\"#!\" class=\"modal-close waves-effect waves-light btn\">Done!</a>\r\n    </div>\r\n  </div>\r\n        <button class=\"waves-effect waves-light btn modal-trigger\"  data-target=\"modal1\" style={{margin: \"20px\"}} onClick={this.handleClick()}>ADD CONNECTION</button>\r\n        \r\n<table className=\"centered\">\r\n        <thead>\r\n          <tr>\r\n              <th>Device Name</th>\r\n              <th>Device MAC</th>\r\n              <th>Device Type</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n            \r\n\r\n          {dataDevicesList}\r\n           \r\n        </tbody>\r\n      </table>\r\n      </div>\r\n      \r\n</div>\r\n)\r\n}}</AuthContext.Consumer>\r\n        )\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default WelcomePage;","import React, { Component, Fragment } from 'react';\r\nimport {DataBaseContext} from './DataBaseContext';\r\n\r\nimport {Link} from 'react-router-dom';\r\nimport './Login.css'\r\nconst heroku = 'https://crazyapp2020.herokuapp.com/auth';\r\nconst serverLaptop = 'https://crazyapp2020.herokuapp.com/';\r\nconst aToken= 'Bearer';\r\n\r\nclass LogInPage extends Component {\r\n\t_isMounted = false;\r\n\tstatic contextType = DataBaseContext;\r\n\r\n\tstate = {\r\n\r\nauthToken:\"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE1OTgyOTA1MjQsIm5iZiI6MTU5ODI5MDUyNCwianRpIjoiZTY4Mzg3OWQtYTVkNy00MDJmLWFhMmItOWZiZTJjOTA5YWYzIiwiZXhwIjoxNjI5ODQ3NDUwLCJpZGVudGl0eSI6MSwiZnJlc2giOnRydWUsInR5cGUiOiJhY2Nlc3MifQ.XLmGarf6kLp-XFHsw1lwMY5SZUlJG-S2Gj48kDMneH0\"\r\n,\r\nuserSensors:'',\r\n\r\nuserName:'',\r\nuserPass:'',\r\nuT:aToken,\r\nvalidUser:false\r\n\r\n\r\n\t}\r\n\r\n    componentDidMount() {\r\n\t\tthis._isMounted = true;\r\n\t\tconst M = window.M;\r\n\t\tthis.context.loginPageF('loser')\r\n\r\n\r\n\t}\r\n\r\n\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis._isMounted = false;\r\n\t  }\r\n\than = (e,userCred) =>{\r\n\t\tuserCred(e)\r\n\t}\r\n\r\n\thandleInputChange = (e) =>{\r\n\t\tthis.setState({\r\n\t\t\tuserName: e.target.value\r\n\r\n\t\t})\r\n\r\n\r\n\t}\r\n\r\n\thandlePassChange = (e) =>{\r\n\t\tthis.setState({\r\n\r\n\t\t\tuserPass: e.target.value\r\n\t\t})\r\n\r\n\r\n\t}\r\n\r\n\thandleLogin = () =>{\r\n\t\tconsole.log('sss')\r\n\t\tconsole.log('SUBMIT');\r\n\r\n\t\t(async () => {\r\n\t\t\tconst rawResponse = await fetch(serverLaptop+'login', {\r\n\t\t\t  method: 'POST',\r\n\t\t\t  headers: {\r\n\t\t\t\t'Accept': 'application/json',\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t\r\n\t\t\t  },\r\n\t\t\t  \r\n\t\t\t  body: JSON.stringify({\"username\":this.state.userName,  \"password\":this.state.userPass})\r\n\r\n\t\t\t});\r\n\t\t\tconst content = await rawResponse.json();\r\n\r\n\r\n\t\t\tthis.setState({ authToken: aToken+content.access_token })\r\n\t\t\tconsole.log(this.state.authToken)\r\n\t\t\tfetch(serverLaptop+'users/'+this.state.userName, {\r\n\tmethod: 'GET',\r\n\theaders: {\r\n\t  'Authorization':  this.state.authToken\r\n\r\n\t}\r\n\r\n  })\r\n  .then(res => res.json())\r\n  .then(data => { this.setState({userSensors: data.digital_sensors}); console.log(this.state.userSensors)})\r\n  .catch(err => { console.log(err) })\r\n\r\n\t\t  })();\r\nconsole.log('finish'+ this.state.authToken)\r\nconsole.log(this.state.userPass)\r\n\r\n/////////////\r\n\r\n////////////// GET USERS SENSORS\r\n\r\n\r\n\r\n\r\n\t}\r\n\r\n\r\n\thandleSubmit = () =>{\r\n\r\n\t\t/// verify login user\r\n\r\nlet loginValidation =\r\n\r\nthis.state.validUser?( 'try/'+this.state.userName):(JSON.stringify('/'))\r\nlet str = loginValidation.replace(/\"/g,\"\");\r\nloginValidation= str;\r\nreturn loginValidation;\r\n/// verify login user\r\n\r\n\t}\r\n\r\n\tgetToken = () =>{\r\n\r\n\t\t(async () => {\r\n\t\t\tconst rawResponse = await fetch(serverLaptop+'login', {\r\n\t\t\t  method: 'POST',\r\n\t\t\t  \r\n\t\t\t  headers: {\r\n\t\t\t\t'Accept': 'application/json',\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\r\n        \r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t  }, \r\n\t\t\t  body: JSON.stringify({\"username\":this.state.userName,  \"password\":this.state.userPass})\r\n\r\n\t\t\t}).then((resp) =>{\r\nconsole.log(resp.status);\r\nconsole.log(this.state.validUser)\r\nresp.status==200?(this.setState({validUser:true})):(this.setState({validUser:false}))\r\n\t\t\t\t// Return the response as JSON\r\n\t\t\t\treturn resp.json();\r\n\r\n\t\t\t}).then(data =>  {\r\n\r\n\r\n\r\n\r\n\t\t\t\treturn data\r\n\r\n\t\t\t}).then( (data) =>{this.setState({authToken:data.access_token})})\r\n\r\n\t\t\t.catch(function (err) {\r\n\r\n\t\t\t\t// Log any errors\r\n\t\t\t\tconsole.log('something went wrong', err);\r\n\r\n\r\n\t\t\t});\r\n\r\n\r\n\r\n\t\t})();\r\n\t\treturn this.state.authToken\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n///////RENDER ---------------------\r\n\r\n\r\n\r\n\r\n\r\n\r\nrender(){\r\n\tconst {loginPageF} = this.context;\r\n\r\n\r\n\r\n    ///////RETURN ---------------------\r\nreturn(\r\n\r\n\r\n\r\n<div class=\"row \">\r\n\r\n\r\n\t<div class=\"col s12 m8 l4 offset-m2 offset-l4\">\r\n\t\t<div class=\"card\">\r\n\r\n\t\t\t<div class=\"card-action teal lighten-1 white-text\">\r\n\t\t\t\t<h3> App Login</h3>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class=\"card-content\">\r\n\t\t\t\t<div class=\"form-field\" >\r\n\t\t\t\t\t<label for=\"username\">Username</label>\r\n\t\t\t\t\t<input type=\"text\" id=\"username\" onChange={this.handleInputChange}></input>\r\n\t\t\t\t</div><br></br>\r\n\r\n\t\t\t\t<div class=\"form-field\">\r\n\t\t\t\t\t<label for=\"password\">Password</label>\r\n\t\t\t\t\t<input type=\"password\" id=\"password\" onChange={this.handlePassChange}></input>\r\n\t\t\t\t</div><br></br>\r\n\r\n\r\n\r\n\t\t\t\t<div class=\"form-field\">\r\n\t\t\t\t<Link to={{pathname:this.handleSubmit(),state:{user: this.state.userName, token:this.state.authToken, userName:this.state.userName, pass:this.state.userPass}}}>\r\n\t\t\t\t\t<button class=\"btn-large waves-effect waves-dark\"  onClick={ this.handleSubmit,this.getToken}>Login</button>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t</div><br></br>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t</div>\r\n\r\n</div>\r\n)\r\n\r\n\r\n\r\n\r\n    ///////RETURN ---------------------\r\n\r\n}\r\n\r\n///////RENDER ---------------------\r\n\r\n}\r\n\r\nexport default LogInPage;\r\n","import React, { Component, Fragment,useEffect } from 'react';\r\nimport './WelcomePage.css';\r\nimport Select from \"react-select\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Try extends Component {\r\n\r\n    state={\r\n        authToken:'',\r\n        userName:'a',\r\n        userPass:'',\r\n        data:{digital_sensors:[1,2,3],digital_actuators:[1,2],digital_connections:[1]},\r\n        newConnectionName:'d',\r\n        device1:'',\r\n        device2:'',\r\n        user_id:'',\r\n        mA:'ady',\r\n        url:'https://crazyapp2020.herokuapp.com',\r\n        changeNameField:'are you sure?',\r\n        sensorName:false,\r\n        actuatorName:false,\r\n        selectedDeviceMac:'0',\r\n        newSensorMAC:'0.0.0.0.1',\r\n        newActuatorMAC:'0.0.0.0.1'\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n///////TIMER FOR SENSORS\r\n\r\n    reqTimer() {\r\n      \r\n      const interval = setInterval(() => {\r\n        console.log('request...');\r\n        \r\n      \r\n     // return () => clearInterval(interval);\r\n\r\n////FETCH DATA\r\n     fetch(this.state.url+'/user/'+this.props.location.state.userName, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Authorization': this.state.authToken\r\n            \r\n      }\r\n      \r\n      })\r\n      .then(res => res.json())\r\n      .then(data => {this.setState({data:data}) })\r\n      .catch(err => { console.log(err) })\r\n         \r\n        }, 3000);\r\n    }\r\n   \r\n\r\n\r\n///////TIMER FOR SENSORS\r\n\r\n\r\n    componentDidMount (){\r\n\t//\tthis.setState({\r\n     //       userName:this.props.location.state.name,\r\n     //       userPass:this.props.location.state.pass\r\n     //   })\r\n\r\n        \r\n     const M = window.M;M.AutoInit()\r\n     document.addEventListener('DOMContentLoaded', function() {\r\n         var elems = document.querySelectorAll('.modal');\r\n         var instances = M.Modal.init(elems, {});\r\n       });\r\n     \r\n       document.addEventListener('DOMContentLoaded', function() {\r\n         var elems = document.querySelectorAll('select');\r\n         var instances = M.FormSelect.init(elems, {});\r\n       });\r\n\r\n\r\n\r\n\r\n\r\n        //////// Get data from api\r\n   \r\n        \r\n\t\t(async () => {\r\n\t\t\tconst rawResponse = await fetch(this.state.url+'/login', {\r\n\t\t\t  method: 'POST',\r\n\t\t\t  headers: {\r\n\t\t\t\t'Accept': 'application/json',\r\n\t\t\t\t'Content-Type': 'application/json'\r\n              },\r\n              \r\n\t\t\t  body: JSON.stringify({\"username\":this.props.location.state.userName,  \"password\":this.props.location.state.pass})\r\n\t\t\t \r\n\t\t\t});\r\n\t\t\tconst content = await rawResponse.json();\r\n\t\t\t\r\n         \r\n      this.setState({ authToken: 'Bearer '+content.access_token }) \r\n      \r\n\r\n\t\t\t\r\n\t\t\tfetch(this.state.url+'/user/'+this.props.location.state.userName, {\r\n\tmethod: 'GET',\r\n\theaders: {\r\n\t  'Authorization': this.state.authToken\r\n\t  \t  \r\n\t}\r\n\t\r\n  })\r\n  .then(res => res.json())\r\n  .then(data => {console.log(data);this.setState({data:data}) })\r\n  .catch(err => { console.log(err) })\r\n\t\t\tthis.reqTimer()\r\n\t\t  })();\r\n\r\n\r\n\r\n    \r\n  //////// Get data from api\r\n\r\n////////////// GET USERS SENSORS\r\n\r\n\r\n    }\r\n\r\n//////////////EDIT DEVICE NAME/////\r\n/////// Send changed name to server\r\n\r\n\r\nsendName(){\r\n  console.log('aaa');\r\n  \r\n}\r\n\r\n\r\n////sensor name\r\n\r\neditSensorName= (id)=>{\r\nthis.setState({sensorName:true})\r\nthis.setState({actuatorName:false})\r\n\r\n\r\nconsole.log('----',this.state.selectedDeviceMac+'-----');\r\nthis.setState({selectedDeviceMac:id})\r\nlet deviceName=[];\r\n      let i=0;\r\n      let delConState = this.state.data.digital_sensors.map(sensor =>{\r\n      \r\n      if(sensor.mac_address==this.state.selectedDeviceMac&&this.state.changeNameField ){\r\ni=this.state.changeNameField;\r\nsensor.device_name=i\r\nconsole.log('iiiiii',i)\r\n\r\n\r\n\r\n\r\n      }\r\n      else{}\r\n    \r\n      deviceName.push(sensor)\r\n    \r\n    \r\n    \r\n        \r\n        console.log(deviceName)\r\n       \r\n      \r\n      })\r\nif(this.state.changeNameField){\r\n      \r\n      let sensorsCopy = JSON.parse(JSON.stringify(this.state.data))\r\n       \r\n       sensorsCopy.digital_sensors = deviceName;\r\n       console.log(sensorsCopy)\r\n       this.setState({\r\n          data:sensorsCopy\r\n        }) \r\n      console.log(\"aidddddddddd\"+id)\r\n/////////send data - change name\r\nfetch(this.state.url+'/user/'+this.props.location.state.userName+'/sensors_list/digital_sensor/change_sensor_name/'+id, {\r\n  method: 'PUT',\r\n  headers: {\r\n    'Authorization': this.state.authToken\r\n    ,'Content-Type':'application/json'\r\n  },\r\n  body:JSON.stringify({\r\n    \r\n    \"device_name\": this.state.changeNameField\r\n    \r\n\r\n\r\n  })\r\n}).then(function(response) {\r\n  return response.json();\r\n}).then(function(data) {\r\n  console.log('Name change', id);\r\n});\r\n\r\n}\r\n//this.setState({changeNameField:'device'})\r\n}\r\n\r\n\r\n////Actuator Name\r\neditActuatorName= (id)=>{\r\n  this.setState({sensorName:false})\r\n  this.setState({actuatorName:true})\r\n\r\n  console.log('----',id);\r\n  let deviceName=[];\r\n        let i=0;\r\n        let delConState = this.state.data.digital_actuators.map(act =>{\r\n        \r\n        if(act.mac_address==id&&this.state.changeNameField){\r\n  i=this.state.changeNameField;\r\n  act.device_name=i;\r\n  \r\n  \r\n \r\n  \r\n        }\r\n        else{}\r\n        deviceName.push(act)\r\n        })\r\n      \r\n      \r\n      \r\n      \r\n      \r\n          \r\n          console.log(deviceName)\r\n          \r\n        \r\n          if(this.state.changeNameField){\r\n  \r\n  \r\n        let sensorsCopy = JSON.parse(JSON.stringify(this.state.data))\r\n         \r\n         sensorsCopy.digital_actuators = deviceName;\r\n         console.log(sensorsCopy)\r\n         this.setState({\r\n            data:sensorsCopy\r\n          }) \r\n          ////////send data - change name\r\nfetch(this.state.url+'/user/'+this.props.location.state.userName+'/actuators_list/digital_actuator/change_actuator_name/'+id, {\r\n  method: 'PUT',\r\n  headers: {\r\n    'Authorization': this.state.authToken\r\n    ,'Content-Type':'application/json'\r\n  },\r\n  body:JSON.stringify({\r\n    \r\n    \"device_name\": this.state.changeNameField\r\n    \r\n\r\n\r\n  })\r\n}).then(function(response) {\r\n  return response.json();\r\n}).then(function(data) {\r\n  console.log('Name change', id);\r\n});\r\n\r\n\r\n}\r\n  }\r\n  \r\n\r\n  \r\n//////////////EDIT DEVICE NAME/////\r\n\r\n//////ADD SENSOR////\r\n\r\naddSensor = ()=>{\r\n  \r\n  fetch(this.state.url+'/sensors_list/digital_sensor/add/'+this.state.newSensorMAC, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Authorization': this.state.authToken\r\n      ,'Content-Type':'application/json'\r\n    },\r\n    body:JSON.stringify({\r\n      \r\n      \"mac_address\": \"5C:CF:7F:8E:94:DE0\",\r\n      \"device_name\": \"gg\",\r\n      \"state\": 0,\r\n      \"device_type\": \"digital_sensor\",\r\n      \"user_id\": this.state.data.id\r\n\r\n\r\n    })\r\n  }).then(function(response) {\r\n    return response.json();\r\n  }).then(function(data) {\r\n    console.log('new sensor added:', '---');\r\n  });\r\n\r\n  }\r\n  //////ADD SENSOR////\r\n  //////ADD Actuator////\r\n\r\naddActuator = ()=>{\r\n  \r\n  fetch(this.state.url+'/user/'+this.props.location.state.userName+'/actuators_list/digital_actuator/add/'+this.state.newActuatorMAC, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Authorization': this.state.authToken\r\n      ,'Content-Type':'application/json'\r\n    },\r\n    body:JSON.stringify({\r\n      \r\n      \"mac_address\": \"5C:CF:7F:8E:94:DE0\",\r\n      \"device_name\": \"gg\",\r\n      \r\n      \"device_type\": \"digital_actuator\",\r\n      \"user_id\": this.state.data.id\r\n\r\n\r\n    })\r\n  }).then(function(response) {\r\n    return response.json();\r\n  }).then(function(data) {\r\n    console.log('new actuator added:', '---');\r\n  });\r\n\r\n  }\r\n  //////ADD Actuator////\r\n    //// ADD CONNECTION///\r\n    \r\n    \r\naddConnection= ()=>{\r\n\r\nlet newConnection={\"connection_name\":this.state.newConnectionName,\"sensor_mac_address\": this.state.device1,\"actuator_mac_address\":this.state.device2,\"id\": this.state.data.id}\r\n  \r\n \r\n    let connectionsCopy = JSON.parse(JSON.stringify(this.state.data))\r\n       \r\n       connectionsCopy.digital_connections[ connectionsCopy.digital_connections.length] = newConnection;\r\n       this.setState({\r\n          data:connectionsCopy\r\n        }) \r\n\r\n        \r\n\r\n  let con =\"qqq\";\r\n  fetch(this.state.url+\"/user/\"+this.props.location.state.userName+'/connections/digital/'+newConnection.connection_name, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Authorization': this.state.authToken\r\n      ,'Content-Type':'application/json'\r\n    },\r\n    body:JSON.stringify({\r\n      \r\n      \"sensor_mac_address\": this.state.device1,\r\n      \"actuator_mac_address\":this.state.device2,\r\n      \"user_id\": this.state.data.id\r\n\r\n\r\n    })\r\n  }).then(function(response) {\r\n    return response.json();\r\n  }).then(function(data) {\r\n    console.log('Created Connection:', con);\r\n  });\r\n}\r\n    \r\n  //// ADD CONNECTION///\r\n\r\n\r\n\r\n\r\n\r\n\r\n    //// CHANGE SENSORS STATE///\r\n\r\n\r\n    changeSensorState = (id)=>{\r\n      \r\n      console.log(\"-----SENSORS\",id)\r\n      \r\n      \r\n      let sensorState=[];\r\n      let i=0;\r\n      let delConState = this.state.data.digital_sensors.map(sensor =>{\r\n      //return sensor.mac_address == id;\r\n      if(sensor.mac_address==id){\r\ni=!sensor.state;\r\nsensor.state=i\r\nsensor.state==false?(sensor.state=0):(sensor.state=1);\r\n\r\n\r\n\r\n\r\n      }\r\n      else{}\r\n        sensorState.push(sensor)\r\n        \r\n      \r\n      })\r\n      \r\n      console.log(sensorState)\r\n      \r\n      let sensorsCopy = JSON.parse(JSON.stringify(this.state.data))\r\n       \r\n       sensorsCopy.digital_sensors = sensorState;\r\n       console.log(sensorsCopy)\r\n       this.setState({\r\n          data:sensorsCopy\r\n        }) \r\n      \r\n       \r\n    \r\n  \r\n      \r\n      \r\n        \r\n      \r\n      \r\n      fetch(this.state.url+'/sensors_list/digital_sensor/add/'+id, {\r\n          method: 'PUT',\r\n          headers: {\r\n            'Authorization': this.state.authToken,\r\n            'Content-Type':'application/json'\r\n          },\r\n          body:JSON.stringify({\r\n            \r\n           \r\n           \r\n            \"state\":i,\r\n            \"user_id\":1\r\n      \r\n      \r\n          })\r\n        }).then(function(response) {\r\n          return response.json();\r\n        }).then(function(data) {\r\n          console.log('Changed State:',id);\r\n        });\r\n     \r\n      }\r\n\r\n\r\n    //// CHANGE SENSORS STATE///\r\n/////DELETE CONNECTION\r\n\r\n\r\n\r\n\r\ndeleteConnection = (id)=>{\r\nconsole.log(\"-----\",id.value)\r\n\r\n\r\nlet delConState = this.state.data.digital_connections.filter(con =>{\r\nreturn con.connection_name !== id;\r\n\r\n\r\n\r\n})\r\n\r\nlet connectionsCopy = JSON.parse(JSON.stringify(this.state.data))\r\n   \r\n   connectionsCopy.digital_connections = delConState\r\n   \r\n   this.setState({\r\n      data:connectionsCopy\r\n    }) \r\n\r\n\r\n  \r\n\r\nfetch(this.state.url+\"/user/\"+this.props.location.state.userName+'/connections/digital/'+id, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'Authorization': this.state.authToken,\r\n      'Content-Type':'application/json'\r\n    },\r\n    body:JSON.stringify({\r\n      \r\n      \r\n      \r\n      \"user_id\": this.state.data.id\r\n\r\n\r\n    })\r\n  }).then(function(response) {\r\n    return response.json();\r\n  }).then(function(data) {\r\n    console.log('Deleted Connection:',id);\r\n  });\r\n\r\n}\r\n//////////// DELETE CONNECTION ---- UP\r\n/////DELETE SENSOR\r\n\r\n\r\ndeleteSensor = (id)=>{\r\n  console.log(\"-----\",id.value)\r\n  \r\n  \r\n  let delSensorState = this.state.data.digital_connections.filter(con =>{\r\n  return con.connection_name !== id;\r\n  \r\n  \r\n  \r\n  })\r\n  \r\n  let sensorsCopy = JSON.parse(JSON.stringify(this.state.data))\r\n     \r\n     sensorsCopy.digital_connections = delSensorState\r\n     \r\n     this.setState({\r\n        data:sensorsCopy\r\n      }) \r\n  \r\n  \r\n    \r\n  \r\n  fetch(this.state.url+\"/user/\"+this.props.location.state.userName+'/sensors_list/digital_sensor/delete/'+id, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Authorization': this.state.authToken,\r\n        'Content-Type':'application/json'\r\n      },\r\n      body:JSON.stringify({\r\n        \r\n        \r\n        \r\n        \"user_id\": this.state.data.id\r\n  \r\n  \r\n      })\r\n    }).then(function(response) {\r\n      return response.json();\r\n    }).then(function(data) {\r\n      console.log('Deleted Sensor:',id);\r\n    });\r\n  \r\n  }\r\n\r\n\r\n//////////// DELETE SENSOR ---- UP\r\n/////DELETE ACTUATOR\r\n\r\n\r\ndeleteActuator = (id)=>{\r\n  console.log(\"-----\",id.value)\r\n  \r\n  \r\n  let delActuatorState = this.state.data.digital_connections.filter(con =>{\r\n  return con.connection_name !== id;\r\n  \r\n  \r\n  \r\n  })\r\n  \r\n  let actuatorsCopy = JSON.parse(JSON.stringify(this.state.data))\r\n     \r\n     actuatorsCopy.digital_connections = delActuatorState\r\n     \r\n     this.setState({\r\n        data:actuatorsCopy\r\n      }) \r\n  \r\n  \r\n    \r\n  \r\n  fetch(this.state.url+\"/user/\"+this.props.location.state.userName+'/actuators_list/digital_actuator/delete/'+id, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Authorization': this.state.authToken,\r\n        'Content-Type':'application/json'\r\n      },\r\n      body:JSON.stringify({\r\n        \r\n        \r\n        \r\n        \"user_id\": this.state.data.id\r\n  \r\n  \r\n      })\r\n    }).then(function(response) {\r\n      return response.json();\r\n    }).then(function(data) {\r\n      console.log('Deleted Actuators:',id);\r\n    });\r\n  \r\n  }\r\n\r\n\r\n////////////  DELETE ACTUATOR---- UP\r\n  \r\n    \r\n///////////////////////////RENDER////////////////////////////////////\r\n    render(){ \r\n   \r\n     \r\n///Set up a NEW SENSOR\r\nlet newSensorMAC = (e)=>{\r\n  let newSensorMAC= e.target.value;\r\n  this.setState({newSensorMAC:newSensorMAC})\r\n}\r\n///Set up a NEW SENSOR\r\n//Set up a NEW ACTUATOR\r\nlet newActuatorMAC = (e)=>{\r\n  let newActuatorMAC= e.target.value;\r\n  this.setState({newActuatorMAC:newActuatorMAC})\r\n}\r\n///Set up a NEW ACTUATOR\r\n      let handleNewConName= (e)=>{\r\n\r\n        this.setState({newConnectionName:e.target.value})\r\n        \r\n        }\r\n////modal add connection // \r\n        let selectFirstDevice= (e)=>{\r\n\r\nthis.setState({device1:e.target.value});\r\n\r\n         \r\n          \r\n          }\r\n          \r\n        let selectSecondDevice= (e)=>{\r\n          console.log(e.target.value);\r\n          this.setState({device2:e.target.value});\r\n          console.log(this.state.device2+'----')\r\n                   \r\n                    \r\n                    }\r\n\r\n\r\n         \r\n////modal add connection///  this.setState({data:this.data})\r\n                     \r\n\r\n        let dataDevicesList=[];\r\n        let userSensors=[];\r\n        let userActuators=[];\r\n        \r\n        let connectionsList=[]\r\n        \r\n        let modalAct=[];\r\n        let modalSen = [];\r\n\r\n        let dataSDevices= this.state.data.digital_sensors.length ?(this.state.data.digital_sensors.map(sensor =>{\r\n    \r\n            dataDevicesList.push(<tr>\r\n                \r\n            \r\n                <td><a class=\" modal-trigger\" href=\"#modal2\"><i className='change-name'onClick={()=>{this.editSensorName(sensor.mac_address)}} className=\" small material-icons grey-text text-darken-4\">edit</i></a>{sensor.device_name}</td>\r\n                <td >{sensor.mac_address}</td>\r\n                <td>{sensor.device_type}</td>\r\n                \r\n            \r\n                </tr>)\r\n\r\nuserSensors.push(\r\n                \r\n         <tr>\r\n          \r\n     <td>{sensor.device_name}</td>\r\n      <td>{sensor.mac_address}</td>\r\n      <td >{sensor.state}</td>\r\n      <i onClick={()=>{this.changeSensorState(sensor.mac_address)}} className=\" medium material-icons grey-text text-darken-4\">refresh</i>\r\n      <i onClick={()=>{this.deleteSensor(sensor.mac_address)}} className=\" medium material-icons red-text text-darken-4\">cancel</i>\r\n      \r\n                 \r\n      </tr>\r\n      //  sensor.device_name\r\n        \r\n    \r\n\r\n    )\r\n\r\n    //////////////////MODAL///\r\n\r\n\r\n\r\nmodalSen.push(\r\n                \r\n            \r\n  <option value={sensor.mac_address}>{sensor.device_name}</option>\r\n  \r\n )\r\n\r\n \r\n\r\n \r\n\r\n\r\n \r\n //////////////////MODAL////\r\n\r\n\r\n            \r\n            }) \r\n            ): (' ')\r\n\r\n////actuators-list\r\n\r\n\r\nlet Act= this.state.data.digital_actuators.length ?(this.state.data.digital_actuators.map(sensor =>{\r\n    \r\n  userActuators.push(<tr>\r\n      \r\n  \r\n     <td >{sensor.device_name}</td>\r\n      <td>{sensor.mac_address}</td>\r\n      \r\n      <i onClick={()=>{this.deleteActuator(sensor.mac_address)}} className=\" medium material-icons red-text text-darken-4\">cancel</i>\r\n  \r\n      </tr>)\r\n\r\nmodalAct.push(\r\n                \r\n            \r\n  <option value={sensor.mac_address} >{sensor.device_name}</option>\r\n  \r\n )\r\n \r\n //////////////////MODAL////\r\n   \r\n }) \r\n ): (' ')\r\n\r\n////actuators-list\r\n            \r\n        let dataADevices= this.state.data.digital_actuators.length ?(this.state.data.digital_actuators.map(sensor =>{\r\n    \r\n            dataDevicesList.push(<tr>\r\n                \r\n            \r\n                <td><a class=\" modal-trigger\" href=\"#modal2\"><i onClick={()=>{this.editActuatorName(sensor.mac_address)}} className=\" small material-icons grey-text text-darken-4\">edit</i></a>{sensor.device_name}</td>\r\n                <td >{sensor.mac_address}</td>\r\n                <td>{sensor.device_type}</td>\r\n                \r\n            \r\n                </tr>)\r\n            \r\n           \r\n//////////////////MODAL////this.setState({data:this})\r\n\r\n\r\n\r\n\r\n\r\n//////////////////MODAL////\r\n  \r\n}) \r\n\r\n            ): (' ')\r\n\r\n\r\n            let dataConnections= this.state.data.digital_connections.length ?(this.state.data.digital_connections.map(connection =>{\r\n    \r\n              connectionsList.push(<tr key={1}>\r\n                  \r\n              \r\n                  <td>{connection.connection_name}</td>\r\n                  <td >{connection.sensor_mac_address}</td>\r\n                  <td>{connection.actuator_mac_address}</td>\r\n                  <i onClick={()=>{this.deleteConnection(connection.connection_name)}} className=\" medium material-icons red-text text-darken-4\">cancel</i>\r\n                 \r\n                 \r\n              \r\n                  </tr>)\r\n              \r\n              }) \r\n              ): (' ') \r\n      \r\n              \r\nlet changeNameField = (e)=>{\r\n  \r\n   let newName= e.target.value;\r\n   let id=0;\r\n   \r\n this.setState({changeNameField:newName})\r\n this.setState({sensorName:true})\r\n //this.editSensorName(id,newName)\r\n \r\n}\r\nlet sendNameChange = (newName)=>{\r\n // this.setState({changeNameField:'newName'})\r\n console.log(this.state.sensorName);\r\n //this.setState({sensorName:true})\r\n if(this.state.sensorName){\r\n this.editSensorName()\r\n }else{\r\n   this.editActuatorName()\r\n }\r\n\r\n}\r\n\r\n\r\nreturn(\r\n\r\n    \r\n\r\n<div>\r\n  \r\n    \r\n  <div className='center'>\r\n  \r\n  \r\n\r\n      <h3>Welcome {this.props.location.state.userName}</h3>\r\n      \r\n      <h4 style={{margin: \"50px\"}}>Devices</h4>\r\n\r\n\r\n\r\n      \r\n      \r\n  \r\n<div id=\"modal2\" class=\"modal\">\r\n  <div class=\"modal-content\">\r\n    <h4>Edit Device</h4>\r\n    <p>You can change the device name down below...</p>\r\n    <input type=\"text\"placeholder='Change Device Name...' onChange={changeNameField}/>\r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <a  class=\"modal-close waves-effect waves-green btn-flat\" onClick={sendNameChange}>Change</a>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n<div id=\"modal3\" class=\"modal\">\r\n  <div class=\"modal-content\">\r\n    <h4>Add Sensor</h4>\r\n    <p>You can add sensors to the list</p>\r\n    <input type=\"text\"placeholder='Type your sensor MAC adress...' onChange={newSensorMAC}/>\r\n    \r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <a  class=\"modal-close waves-effect waves-green btn-flat\" onClick={this.addSensor}>Add</a>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n<div id=\"modal4\" class=\"modal\">\r\n  <div class=\"modal-content\">\r\n    <h4>Add Actuator</h4>\r\n    <p>You can add actuators to the list</p>\r\n    <input type=\"text\"placeholder='Type your sensor MAC adress...' onChange={newActuatorMAC}/>\r\n    \r\n  </div>\r\n  <div class=\"modal-footer\">\r\n    <a  class=\"modal-close waves-effect waves-green btn-flat\" onClick={this.addActuator}>Add</a>\r\n  </div>\r\n</div>\r\n\r\n      \r\n\r\n\r\n<div id=\"modal1\" class=\"modal\"> \r\n  <div class=\"modal-content\">\r\n    <h4>Make a Connection</h4>\r\n\r\n\r\n\r\n    <div class=\"input-field col s12\">\r\n  <select onChange={selectFirstDevice} className='browser-default'>\r\n    <option value=\"0\" disabled selected>Choose your Sensor</option>\r\n    {modalSen}\r\n  </select>\r\n  <label></label>\r\n</div>\r\n\r\n\r\n<div class=\"input-field col s12 \">\r\n  <select onChange={selectSecondDevice} className='browser-default'>\r\n    <option value=\"\" disabled selected>Choose your Actuator</option>\r\n   {modalAct}\r\n    \r\n    \r\n  </select>\r\n  <input type=\"text\"placeholder='Connection Name...' onChange={handleNewConName}/>\r\n  <label></label>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n  </div >\r\n  <div class=\"modal-footer\">\r\n    <button class=\"modal-close waves-effect waves-light btn\" onClick={this.addConnection}>Done!</button>\r\n  </div>\r\n</div>\r\n     \r\n      \r\n<table className=\"centered\">\r\n      <thead>\r\n        <tr>\r\n            <th>Device Name</th>\r\n            <th>Device MAC</th>\r\n            <th>Device Type</th>\r\n            \r\n           \r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n          \r\n\r\n        {dataDevicesList}\r\n        \r\n         \r\n      </tbody>\r\n    </table>\r\n    <h4 style={{margin: \"50px\"}}>Connections</h4>\r\n    <button class=\"waves-effect waves-light btn modal-trigger\"  data-target=\"modal1\" style={{margin: \"20px\"} } >ADD CONNECTION</button>\r\n    <table className=\"centered\">\r\n      <thead>\r\n        <tr>\r\n            <th>Connection Name</th>\r\n            <th>Device1</th>\r\n            <th>Device2</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>{connectionsList}</tbody></table>\r\n    \r\n\r\n\r\n\r\n\r\n\r\n   \r\n    <h4 style={{margin: \"50px\"}}>Sensors</h4>\r\n    <button class=\"waves-effect waves-light btn modal-trigger\"  data-target=\"modal3\" style={{margin: \"20px\"} } >ADD   SENSOR</button> \r\n    <table className=\"centered\">\r\n      \r\n      <thead>\r\n        <tr>\r\n            <th>Device Name</th>\r\n            <th>Device MAC</th>\r\n            <th>Device STATE</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody > {userSensors} \r\n        </tbody>\r\n        </table>\r\n\r\n\r\n\r\n\r\n        <h4 style={{margin: \"50px\"}}>Actuators</h4>\r\n    <button class=\"waves-effect waves-light btn modal-trigger\"  data-target=\"modal4\" style={{margin: \"20px\"} } >ADD ACTUATOR</button> \r\n    <table className=\"centered\">\r\n      \r\n      <thead>\r\n        <tr>\r\n            <th>Device Name</th>\r\n            <th>Device MAC</th>\r\n            <th>Device STATE</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody > {userActuators} \r\n        </tbody>\r\n        </table>\r\n        \r\n      \r\n    </div>\r\n\r\n    </div>\r\n\r\n    \r\n  \r\n   \r\n\r\n\r\n\r\n)\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default Try;","import React, { createContext } from 'react';\nimport {BrowserRouter, Route} from 'react-router-dom'\nimport OptionMenu from './optionMenu';\nimport DataBaseContextC from './DataBaseContext';\nimport WelcomePage from './WelcomePage';\nimport LogInPage from './LogInPage';\nimport Try from './Try'\nimport AuthContextProvider from './contexts/AuthContext';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Link\n} from \"react-router-dom\";\n\n\n\n\n\nfunction App() {\n  return (\n\n    <>\n\n    <BrowserRouter>\n    <DataBaseContextC>\n\n\n\n\n        <Route exact path='/'component={LogInPage}/>\n        <Route path='/user'component={WelcomePage}/>\n        <Route path='/try'component={Try}/>\n\n\n\n\n\n    </DataBaseContextC>\n    </BrowserRouter>\n\n    </>\n\n  )\n\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}